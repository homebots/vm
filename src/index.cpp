// #define WITH_DEBUG
#define SERIAL_SPEED 115200

#include "homebots.h"
#include "vm.hpp"
#include "espconn.h"

static ws_info webSocket;
static Program program;
static Wifi wifi;
static os_timer_t webSocketCheck;
espconn server;

static uint8_t blinky[] = {0xd, 0x0, 0x2, 0x1, 0xd, 0x1, 0x2, 0x0, 0xd, 0x2, 0x2, 0x0, 0x8, 0x5, 0x88, 0x13, 0x0, 0x0, 0x9, 0x7, 0x62, 0x6c, 0x69, 0x6e, 0x6b, 0x79, 0x20, 0x6f, 0x6e, 0x20, 0x70, 0x69, 0x6e, 0x20, 0x30, 0x0, 0x9, 0x7, 0x73, 0x65, 0x74, 0x20, 0x70, 0x69, 0x6e, 0x20, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x0, 0x9, 0x1, 0x2, 0x9, 0x7, 0xa, 0x0, 0x43, 0x0, 0x1, 0x2, 0x8, 0x5, 0xe8, 0x3, 0x0, 0x0, 0x31, 0x1, 0x2, 0x1, 0x0, 0x9, 0x7, 0x73, 0x65, 0x74, 0x20, 0x70, 0x69, 0x6e, 0x20, 0x30, 0x20, 0x74, 0x6f, 0x20, 0x0, 0x9, 0x1, 0x2, 0x9, 0x7, 0xa, 0x0, 0x43, 0x0, 0x1, 0x2, 0x8, 0x5, 0xe8, 0x3, 0x0, 0x0, 0x31, 0x1, 0x2, 0x1, 0x1, 0xa, 0x4, 0x25, 0x0, 0x0, 0x0};

bool ICACHE_FLASH_ATTR ws_isConnected(ws_info *webSocket)
{
  return webSocket->connectionState != CS_CONNECTED && webSocket->connectionState != CS_CONNECTING;
}

void ICACHE_FLASH_ATTR onReceive(struct ws_info *wsInfo, int length, char *message, int opCode)
{
  if (length && opCode == WS_OPCODE_BINARY || opCode == WS_OPCODE_TEXT)
  {
    program.load((uint8_t *)message, length);
    os_timer_arm(&program.timer, 10, 0);
  }
}

void ICACHE_FLASH_ATTR tick()
{
  if (program.paused)
  {
    return;
  }

  while (!program.delayTime && !program.paused)
  {
    program.tick();
  }

  os_timer_arm(&program.timer, program.delayTime, 0);
  program.delayTime = 0;
}

void reconnectWebSocket()
{
  if (!wifi.isConnected())
  {
    return;
  }

  if (ws_isConnected(&webSocket))
  {
    ws_close(&webSocket);
    ws_connect(&webSocket, "ws://hub.homebots.io/hub/homebots");
    return;
  }
}

void ICACHE_FLASH_ATTR setup()
{
  webSocket.onReceive = onReceive;
  os_timer_setfn(&webSocketCheck, (os_timer_func_t *)reconnectWebSocket, NULL);
  os_timer_arm(&webSocketCheck, 3000, 1);

  os_timer_setfn(&program.timer, (os_timer_func_t *)tick, NULL);

  program.load(blinky, sizeof(blinky));
  tick();
  // wifi.connectTo("HomeBots", "HomeBots");
  // wifi.startAccessPoint("HomeBots");
}
